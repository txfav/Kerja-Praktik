[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "C:\Users\faisa\Documents\Kuliah\SEM 6\BLE_CLIENT2\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 "C:/Users/faisa/Documents/Kuliah/SEM 6/BLE_CLIENT2/build/bootloader/bootloader.bin""
Bootloader binary size 0x4ed0 bytes. 0x3130 bytes (38%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/BLE_CLIENT2.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable BLE_CLIENT2.elf
[6/8] Generating binary image from built executable
esptool.py v4.4
Creating esp32c3 image...
Merged 2 ELF sections
Successfully created esp32c3 image.
Generated C:/Users/faisa/Documents/Kuliah/SEM 6/BLE_CLIENT2/build/BLE_CLIENT2.bin
[7/8] cmd.exe /C "cd /D "C:\Users\faisa\Documents\Kuliah\SEM 6\BLE_CLIENT2\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.0/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "C:/Users/faisa/Documents/Kuliah/SEM 6/BLE_CLIENT2/build/partition_table/partition-table.bin" "C:/Users/faisa/Documents/Kuliah/SEM 6/BLE_CLIENT2/build/BLE_CLIENT2.bin""
BLE_CLIENT2.bin binary size 0x77f00 bytes. Smallest app partition is 0x100000 bytes. 0x88100 bytes (53%) free.
[7/8] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.0\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.0 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/esptool/esptool.py;--chip;esp32c3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D "WORKING_DIRECTORY=C:/Users/faisa/Documents/Kuliah/SEM 6/BLE_CLIENT2/build" -P C:/Espressif/frameworks/esp-idf-v5.0/components/esptool_py/run_serial_tool.cmake"
esptool esp32c3 -p COM7 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 BLE_CLIENT2.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.4
Serial port COM7
Connecting....
Chip is ESP32-C3 (revision v0.3)
Features: WiFi, BLE
Crystal is 40MHz
MAC: 84:f7:03:41:81:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00004fff...
Flash will be erased from 0x00010000 to 0x00087fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 20176 bytes to 12379...
Writing at 0x00000000... (100 %)
Wrote 20176 bytes (12379 compressed) at 0x00000000 in 0.7 seconds (effective 227.3 kbit/s)...
Hash of data verified.
Compressed 491264 bytes to 281299...
Writing at 0x00010000... (5 %)
Writing at 0x0001a656... (11 %)
Writing at 0x0001fa79... (16 %)
Writing at 0x00027162... (22 %)
Writing at 0x0002e13c... (27 %)
Writing at 0x000346f8... (33 %)
Writing at 0x0003c20e... (38 %)
Writing at 0x000430a9... (44 %)
Writing at 0x00049e30... (50 %)
Writing at 0x00050c7d... (55 %)
Writing at 0x0005787d... (61 %)
Writing at 0x0005dcc9... (66 %)
Writing at 0x00063ee9... (72 %)
Writing at 0x0006a8ec... (77 %)
Writing at 0x0007153f... (83 %)
Writing at 0x00078ee9... (88 %)
Writing at 0x0007fb39... (94 %)
Writing at 0x00086a4f... (100 %)
Wrote 491264 bytes (281299 compressed) at 0x00010000 in 8.8 seconds (effective 445.1 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 231.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
